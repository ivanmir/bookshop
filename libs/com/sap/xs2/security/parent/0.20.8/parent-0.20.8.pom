<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.sap.ldi</groupId>
        <artifactId>ldi-parent</artifactId>
        <version>7.2.0</version>
    </parent>

    <groupId>com.sap.xs2.security</groupId>
    <artifactId>parent</artifactId>
    <version>0.20.8</version>
    <packaging>pom</packaging>

    <properties>
        <coverage.report.createCoverageData>false</coverage.report.createCoverageData>
        <coverage.report.reportTypes>html,txt</coverage.report.reportTypes>
        <jdkVersion>1.8</jdkVersion>
        <uaaVersion>3.4.5</uaaVersion>
        <ngdbcVersion>1.110.5</ngdbcVersion>
        <sapssoextVersion>15.1.0</sapssoextVersion>
        <!-- versions taken from shared_versions.gradle -->
        <aspectJVersion>1.6.9</aspectJVersion>
        <cglibVersion>2.2.2</cglibVersion>
        <commonsHttpClientVersion>4.3.6</commonsHttpClientVersion> <!-- version 4.3.5 is vulnerable, CVE-2015-5262 -->
        <flywayVersion>4.0</flywayVersion> <!-- HANA support as of version 4.0 -->
        <hamcrestVersion>1.3</hamcrestVersion>
        <jacksonVersion>2.5.3</jacksonVersion>
        <jstlVersion>1.2</jstlVersion>
        <junitVersion>4.12</junitVersion>
        <mockitoVersion>1.8.5</mockitoVersion>
        <postgresqlVersion>9.3-1102.jdbc41</postgresqlVersion> <!-- newer version needed -->
        <servletVersion>3.1.0</servletVersion>
        <slf4jVersion>1.7.7</slf4jVersion>
        <springVersion>4.3.1.RELEASE</springVersion>
        <springSecurityVersion>4.1.1.RELEASE</springSecurityVersion>
        <springSecurityJwtVersion>1.0.4.RELEASE</springSecurityJwtVersion>
        <springSecurityOAuthVersion>2.0.10.RELEASE</springSecurityOAuthVersion>
        <springSecuritySamlVersion>1.0.2.RELEASE</springSecuritySamlVersion>
        <springRetryVersion>1.0.2.RELEASE</springRetryVersion>
        <tomcatVersion>7.0.70</tomcatVersion>
        <validationAPIVersion>1.0.0.GA</validationAPIVersion>
        <!-- versions dependent on shared_versions.gradle -->
        <catalinaVersion>6.0.45</catalinaVersion> <!-- older versions are vulnerable, CVE-2016-0714 -->
        <commonsCollectionsVersion>3.2.2</commonsCollectionsVersion> <!-- version 3.2.1 is vulnerable, COLLECTIONS-580 -->
        <commonsIOVersion>2.4</commonsIOVersion>  <!-- jwebunit-htmlunit-plugin, jwebunitHtmlunitPluginVersion -->
        <dbpoolVersion>7.0-jdk7</dbpoolVersion>
        <jacksonMapperVersion>1.9.13</jacksonMapperVersion> <!-- cloudfoundry-identity-server, uaaVersion -->
        <jsonVersion>1.0.0</jsonVersion>          <!-- cloudfoundry-identity-server, uaaVersion -->
        <jwebunitHtmlunitPluginVersion>3.2</jwebunitHtmlunitPluginVersion>
        <openSamlVersion>2.6.1</openSamlVersion>  <!-- spring-security-saml2-core, springSecuritySamlVersion -->
        <securityCoreServerCSIVersion>1.00.8</securityCoreServerCSIVersion>
        <springCloudVersion>1.1.1.RELEASE</springCloudVersion>
        <springCloudServiceBrokerVersion>1.0.0.RELEASE</springCloudServiceBrokerVersion>
        <xalanVersion>2.7.2</xalanVersion>        <!-- older versions are vulnerable, CVE-2014-0107 -->
        <xmlApisVersion>1.4.01</xmlApisVersion>   <!-- spring-security-saml2-core, springSecuritySamlVersion -->
    </properties>

    <modules>
        <module>java-container-security</module>
        <module>java-container-security-api</module>
        <module>uaa-security</module>
        <module>uaa-security-sb</module>
        <module>uaa-security-flyway</module>
        <module>security-commons</module>
        <module>security-integration</module>
        <module>security-configuration</module>
        <!-- <module>uaa-security-its</module>  -->
    </modules>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>${aspectJVersion}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.tomcat</groupId>
                <artifactId>catalina</artifactId>
                <version>${catalinaVersion}</version>
            </dependency>
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib-nodep</artifactId>
                <version>${cglibVersion}</version>
            </dependency>
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>${commonsCollectionsVersion}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commonsIOVersion}</version>
            </dependency>
            <dependency>
                <groupId>org.cloudfoundry.identity</groupId>
                <artifactId>cloudfoundry-identity-server</artifactId>
                <version>${uaaVersion}</version>
            </dependency>
            <dependency>
                <groupId>net.snaq</groupId>
                <artifactId>dbpool</artifactId>
                <version>${dbpoolVersion}</version>
            </dependency>
            <dependency>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-core</artifactId>
                <version>${flywayVersion}</version>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-library</artifactId>
                <version>${hamcrestVersion}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${commonsHttpClientVersion}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jacksonVersion}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.jackson</groupId>
                <artifactId>jackson-mapper-asl</artifactId>
                <version>${jacksonMapperVersion}</version>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${servletVersion}</version>
            </dependency>
            <dependency>
                <groupId>com.unboundid.components</groupId>
                <artifactId>json</artifactId>
                <version>${jsonVersion}</version>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>jstl</artifactId>
                <version>${jstlVersion}</version>
            </dependency>
            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>${validationAPIVersion}</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junitVersion}</version>
            </dependency>
            <dependency>
                <groupId>net.sourceforge.jwebunit</groupId>
                <artifactId>jwebunit-htmlunit-plugin</artifactId>
                <version>${jwebunitHtmlunitPluginVersion}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${mockitoVersion}</version>
            </dependency>
            <dependency>
                <groupId>com.sap.db.jdbc</groupId>
                <artifactId>ngdbc</artifactId>
                <version>${ngdbcVersion}</version>
            </dependency>
            <dependency>
                <groupId>postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresqlVersion}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4jVersion}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4jVersion}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-framework-bom</artifactId>
                <version>${springVersion}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.retry</groupId>
                <artifactId>spring-retry</artifactId>
                <version>${springRetryVersion}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-bom</artifactId>
                <version>${springSecurityVersion}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-jwt</artifactId>
                <version>${springSecurityJwtVersion}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security.oauth</groupId>
                <artifactId>spring-security-oauth</artifactId>
                <version>${springSecurityOAuthVersion}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security.oauth</groupId>
                <artifactId>spring-security-oauth2</artifactId>
                <version>${springSecurityOAuthVersion}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.security.extensions</groupId>
                <artifactId>spring-security-saml2-core</artifactId>
                <version>${springSecuritySamlVersion}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${springVersion}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.tomcat</groupId>
                <artifactId>tomcat-jdbc</artifactId>
                <version>${tomcatVersion}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-cloudfoundry-service-broker</artifactId>
                <version>${springCloudServiceBrokerVersion}</version>
            </dependency>
            <dependency>
                <groupId>xalan</groupId>
                <artifactId>xalan</artifactId>
                <version>${xalanVersion}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <defaultGoal>clean install</defaultGoal>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.2</version>
                </plugin>
                <plugin>
                    <groupId>org.whitesource</groupId>
                    <artifactId>whitesource-maven-plugin</artifactId>
                    <version>3.1.4</version>
                    <configuration>
                       <orgToken>b39d1328-52e2-42e3-98f0-932709daf3f0</orgToken>
                       <product>XS UAA</product>
                       <productVersion>${version}</productVersion>
                       <excludes>
                          <exclude>*test*</exclude>
                       </excludes>
                     </configuration>
                </plugin>
 	    </plugins>
        </pluginManagement>
    </build>

	<profiles>
		<profile>
			<id>vulas</id>
			<activation>
				<property>
					<name>vulas</name>
				</property>
			</activation>
			<properties>
				<vulas.version>1.0.4</vulas.version>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.10</version>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>com.sap.research.security.vulas</groupId>
									<artifactId>vulas-core</artifactId>
									<version>${vulas.version}</version>
									<type>jar</type>
									<classifier>jar-with-dependencies</classifier>
									<outputDirectory>${project.build.directory}/vulas/lib</outputDirectory>
									<destFileName>vulas-core-${vulas.version}-jar-with-dependencies.jar</destFileName>
								</artifactItem>
								<artifactItem>
									<groupId>com.sap.research.security.vulas</groupId>
									<artifactId>vulas-core</artifactId>
									<version>${vulas.version}</version>
									<type>jar</type>
									<classifier>jar-with-dependencies</classifier>
									<outputDirectory>${project.build.directory}/vulas/include</outputDirectory>
									<destFileName>vulas-core-${vulas.version}-jar-with-dependencies.jar</destFileName>
								</artifactItem>
							</artifactItems>
						</configuration>
						<executions>
							<execution>
								<id>copy-vulas</id>
								<phase>initialize</phase>
								<goals>
									<goal>copy</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.16</version>
						<configuration>
							<argLine>
								-javaagent:target/vulas/lib/vulas-core-${vulas.version}-jar-with-dependencies.jar
								-DperiodicUpload.enabled=false
								-DappContext.fixed.groupId=${project.groupId}
								-DappContext.fixed.artifactId=${project.artifactId}
								-DappContext.fixed.version=${project.version}
								-Dupload.enabled=true
								-noverify
								<!-- Uncomment to debug the test execution or the Vulas plugin -->
								<!-- -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000 -->
							</argLine>
						</configuration>
					</plugin>
					<plugin>
						<groupId>com.sap.research.security.vulas</groupId>
						<artifactId>vulas-maven-plugin</artifactId>
						<version>${vulas.version}</version>
						<configuration>
							<!-- General settings -->
							<!-- Upload analysis results to central Vulas engine (default: true) -->
							<upload></upload>
							<!-- Url and user of the Vulas backend, to be used only if default
								settings in vulas-cfg.properties shall be overridden -->
							<collectorUrl>${vulas.backend.url}</collectorUrl>
							<collectorUser>${vulas.backend.user}</collectorUser>
							<collectorPwd>${vulas.backend.pwd}</collectorPwd>
							<!-- Settings for goal 'clean' -->
							<!-- Whether or not to clean all versions of the respective artifact (default: false) -->
							<cleanAllVersions>true</cleanAllVersions>
							<!-- Settings for goal 'instr' -->
							<!-- Directory to (non-recursively) search for JAR or WAR files (depending
								on the project's packaging type) that will be instrumented (${project.build.directory}) -->
							<srcDir></srcDir>
							<!-- Directory to where the instrumented file(s) will be written to
								(default: ${project.build.directory}/vulas/target) -->
							<targetDir></targetDir>
							<!-- WAR only: The files of this directory will be included in the
								new WARs WEB-INF/lib folder (default: ${project.build.directory}/vulas/include) -->
							<includeDir></includeDir>
							<!-- Additional files needed for the compilation of the instrumented
								classes (e.g., from neo-javaee6-wp-sdk-2.48.7\api\lib). Default: ${project.build.directory}/vulas/lib -->
							<libDir></libDir>
							<!-- Settings for goals 'a2c' and 't2c' -->
							<!-- A particular bug to be checked for reachability (default: all
								bugs reported by the Vulas engine that were not traced) -->
							<bug></bug>
							<!-- The framework to be used for the call graph construction (default: wala) -->
							<callgraphAnalysisFramework></callgraphAnalysisFramework>
							<!-- Whether or not to stop the CG analysis as soon as entry points
								supposed to be used for the callgraph construction cannot be found by the
								analysis framework. If true, any entry point missing in the call graph will
								terminate the analysis, if false, as long as there is one entrypoint is found,
								the analysis will be performed (default A2C: false) (default T2C: false). -->
							<exitOnUnknownEntryPoints></exitOnUnknownEntryPoints>
							<!-- Regex to filter entry points (semicolon separated, default: none) -->
							<constructFilter></constructFilter>
							<!-- All packages to be excluded from call graph construction, packages
								are separated by semicolon e.g. [java/.*;sun/.*]. Defaults for the different
								analysis frameworks are provided in the respective configuration files. -->
							<excludePackages></excludePackages>
							<!-- Whether or not to preprocess dependencies (during which some
								Manifest file entries that proved to break the CG analysis will be removed)
								(default: false) -->
							<preprocessDependencies>true</preprocessDependencies>
							<!-- Whether to read app constructs from ${project.build.sourceDirectory}
								or from the central Vulas engine (A2C only, default: false) -->
							<readAppConstructsFromSourceDirectory></readAppConstructsFromSourceDirectory>
							<!-- Timeout for reachability analysis in mins (default: 15 min) -->
							<timeout></timeout>
							<!-- Settings for goals 'report' -->
							<!-- Threshold for throwing a build exception (values: noException
								< dependsOn < potentiallyExecutes < actuallyExecutes ; default: potentiallyExecutes) -->
							<exceptionThreshold></exceptionThreshold>
							<!-- A vulnerability in blacklisted scopes will not cause an exception
								(multiple scopes to be separated by comma, default: test) -->
							<exceptionScopeBlacklist></exceptionScopeBlacklist>
							<!-- Directory to where the report will be written to (default: ${project.build.directory}/vulas/report) -->
							<reportDir></reportDir>
							<!-- Controls whether aggregated reports will be created for modular
								Maven projects (default: true) -->
							<aggregateModules></aggregateModules>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
