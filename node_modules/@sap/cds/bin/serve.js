module.exports = Object.assign ( serve, {
    options: ['--to', '--at', '--with'],
    shortcuts: ['-2', '-a', '-w'],
    help: `
# SYNOPSIS

    *cds serve* <service> [ --at <endpoint> ] [ --with <impl> ]
    *cds serve* all

    Starts an http server which generically serves the specified service(s).
    If used with _all_ for the services, it will look up according configuration
    from _package.json_ or _.cdsrc.json_ and serve each configured service.

`})

const cds = require('../lib')
function serve (models, options={}) {
    const dso = cds.env.data.driver ? cds.env.data : cds.env.services.db
    const ready = dso ? (
        dso.model ? cds.load (dso.model) .then (m => {
            cds.connect()
            cds.session.model = cds.linked(m)
        })
        : Promise.resolve (cds.connect())
    ) : Promise.resolve ()
    ready.then (()=>{
        const app = cds.serve (models, options)
        return app.listen() .catch (console.error)
    })
}
/* eslint no-console:off */