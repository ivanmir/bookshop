module.exports.parseArgs = (cmd, args) => {

  const options = {}
  const argv = []
  const _flags = cmd.flags || []
  const _options = cmd.options || []
  const _shortcuts = cmd.shortcuts || []

  const _other = {
    flags: { '--new-csn':1 },
    options: { '--sql':1 },
  }

  if (args.length>0)  for (let i = 0; i < args.length; ++i) {
    let a = args[i]
    if (!a.startsWith('-')) {
      argv.push(a)
      continue
    }
    let ox = _shortcuts.indexOf(a)
    if (ox >= 0) {
      if (ox >= _options.length) { options[_flags[ox].slice(2)] = true; continue }
      else a = _options[ox]
    } else {
      ox = _flags.indexOf(a);
      if (ox >= 0) { options[_flags[ox].slice(2)] = true; continue }
    }
    ox = _options.indexOf(a)
    if (ox >= 0) {
      let optValue = true
      if (args[i+1])  optValue = args[++i]
      options[_options[ox].slice(2)] = optValue
      continue
    }
    if (a in _other.options) {
      options[a] = args[++i]
      continue
    }
    if (a in _other.flags) {
      options[a] = true
      continue
    }
    throw new Error('invalid option: ' + a)
  }
  return { argv, options }
}
