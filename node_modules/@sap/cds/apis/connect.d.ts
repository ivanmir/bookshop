import { ParsedModel, Definitions, Definition } from "./specs/CSN"
import { ParsedQuery } from "./specs/CQN"
import { ReflectedModel, reflected } from './reflect'
import { SELECT, INSERT, UPDATE, DELETE } from '@sap/cds/apis/ql'

export function connect (datasource?: string, options?:{
	driver?:string,
	model?:string,
	database?:string,
	url?:string,
	log?:string
}) : Database | LocalService | RemoteService


export class DataSource {
	model: ReflectedModel
	entities: typeof reflected.entities
	read (entity : Definition | string) : SELECT
	insert (entity : Definition | string) : INSERT
	update (entity : Definition | string) : UPDATE
	delete (entity : Definition | string) : DELETE
	run (uow : (cds:DataSource) => void) : Promise<ResultSet[]>
	run (query : ParsedQuery) : Promise<ResultSet>
	foreach (query : ParsedQuery, callback) : this
}

export class Database extends DataSource {
	deploy (model?: ParsedModel | string) : Promise<ParsedModel>
	begin() : Promise<void>
	commit() : Promise<void>
	rollback() : Promise<void>
}

export class ServiceClient extends DataSource {}
export class LocalService extends ServiceClient  {}
export class RemoteService extends ServiceClient  {}

export type ResultSet = {}[]