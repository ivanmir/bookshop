<?xml version="1.0" encoding="utf-8"?>
<edmx:Edmx Version="4.0" xmlns:edmx="http://docs.oasis-open.org/odata/ns/edmx">
  <edmx:Reference Uri="https://oasis-tcs.github.io/odata-vocabularies/vocabularies/Org.OData.Core.V1.xml">
    <edmx:Include Namespace="Org.OData.Core.V1" Alias="Core" />
  </edmx:Reference>
  <edmx:Reference Uri="https://wiki.scn.sap.com/wiki/download/attachments/448470971/Communication.xml?api=v2">
    <edmx:Include Namespace="com.sap.vocabularies.Communication.v1" Alias="Communication" />
  </edmx:Reference>
  <edmx:Reference Uri="https://wiki.scn.sap.com/wiki/download/attachments/448470974/Common.xml?api=v2">
    <edmx:Include Namespace="com.sap.vocabularies.Common.v1" Alias="Common" />
  </edmx:Reference>
  <edmx:DataServices>
    <Schema xmlns="http://docs.oasis-open.org/odata/ns/edm" Alias="UI" Namespace="com.sap.vocabularies.UI.v1">
      <Annotation Term="Core.Description">
        <String>Terms for presenting data in user interfaces</String>
      </Annotation>
      <Annotation Term="Core.Description" Qualifier="Published">
        <String>2017-02-15 Â© Copyright 2013 SAP AG. All rights reserved</String>
      </Annotation>
      <Annotation Term="Core.Links">
        <Collection>
          <Record>
            <PropertyValue Property="rel" String="latest-version" />
            <PropertyValue Property="href" String="https://wiki.scn.sap.com/wiki/download/attachments/448470968/UI.xml?api=v2" />
          </Record>
        </Collection>
      </Annotation>

      <!-- Semantic Views / Perspectives -->

      <Term Name="HeaderInfo" Type="UI.HeaderInfoType" AppliesTo="EntityType">
        <Annotation Term="UI.ThingPerspective" />
        <Annotation Term="Core.Description"
          String="Information for the header area of an entity representation. HeaderInfo is mandatory for main entity types of the model" />
      </Term>
      <ComplexType Name="HeaderInfoType">
        <Property Name="TypeName" Type="Edm.String" Nullable="false">
          <Annotation Term="Core.IsLanguageDependent" />
          <Annotation Term="Core.Description" String="Name of the main entity type" />
        </Property>
        <Property Name="TypeNamePlural" Type="Edm.String" Nullable="false">
          <Annotation Term="Core.IsLanguageDependent" />
          <Annotation Term="Core.Description" String="Plural form of the name of the main entity type" />
        </Property>
        <Property Name="Title" Type="UI.DataField" Nullable="false">
          <Annotation Term="Core.Description" String="Title, e.g. for overview pages" />
        </Property>
        <Property Name="Description" Type="UI.DataField" Nullable="true">
          <Annotation Term="Core.Description" String="Description, e.g. for overview pages" />
        </Property>
        <Property Name="ImageUrl" Type="Edm.String" Nullable="true">
          <Annotation Term="Core.IsURL" />
          <Annotation Term="Core.Description"
            String="Image URL for an instance of the entity type. If the property ImageUrl has a valid value, it can be used for the visualization of the instance. If it is not available or not valid the property TypeImageUrl can be used instead." />
        </Property>
        <Property Name="TypeImageUrl" Type="Edm.String" Nullable="true">
          <Annotation Term="Core.IsURL" />
          <Annotation Term="Core.Description" String="Image URL for the entity type" />
        </Property>
      </ComplexType>

      <Term Name="Identification" Type="Collection(UI.DataFieldAbstract)" Nullable="false" AppliesTo="EntityType">
        <Annotation Term="UI.ThingPerspective" />
        <Annotation Term="Core.Description" String="Collection of fields identifying the object" />
      </Term>

      <Term Name="Badge" Type="UI.BadgeType" AppliesTo="EntityType">
        <Annotation Term="UI.ThingPerspective" />
        <Annotation Term="Core.Description" String="Information usually displayed in the form of a business card" />
      </Term>
      <ComplexType Name="BadgeType">
        <Property Name="HeadLine" Type="UI.DataField" Nullable="false">
          <Annotation Term="Core.Description" String="Headline" />
        </Property>
        <Property Name="Title" Type="UI.DataField" Nullable="false">
          <Annotation Term="Core.Description" String="Title" />
        </Property>
        <Property Name="ImageUrl" Type="Edm.String" Nullable="true">
          <Annotation Term="Core.IsURL" />
          <Annotation Term="Core.Description"
            String="Image URL for an instance of the entity type. If the property ImageUrl has a valid value, it can be used for the visualization of the instance. If it is not available or not valid the property TypeImageUrl can be used instead." />
        </Property>
        <Property Name="TypeImageUrl" Type="Edm.String" Nullable="true">
          <Annotation Term="Core.IsURL" />
          <Annotation Term="Core.Description" String="Image URL for the entity type" />
        </Property>
        <Property Name="MainInfo" Type="UI.DataField" Nullable="true">
          <Annotation Term="Core.Description" String="Main information on the business card" />
        </Property>
        <Property Name="SecondaryInfo" Type="UI.DataField" Nullable="true">
          <Annotation Term="Core.Description" String="Additional information on the business card" />
        </Property>
      </ComplexType>

      <Term Name="LineItem" Type="Collection(UI.DataFieldAbstract)" Nullable="false" AppliesTo="EntityType">
        <Annotation Term="Core.Description" String="Collection of data fields for representation in a table or list" />
        <Annotation Term="UI.ThingPerspective" />
      </Term>

      <Term Name="StatusInfo" Type="Collection(UI.DataFieldAbstract)" Nullable="false" AppliesTo="EntityType">
        <Annotation Term="Core.Description" String="Collection of data fields describing the status of an entity" />
        <Annotation Term="UI.ThingPerspective" />
      </Term>

      <Term Name="FieldGroup" Type="UI.FieldGroupType" AppliesTo="EntityType Action Function FunctionImport">
        <Annotation Term="Core.Description" String="Group of fields with an optional label" />
        <Annotation Term="UI.ThingPerspective" />
      </Term>
      <ComplexType Name="FieldGroupType">
        <Property Name="Label" Type="Edm.String" Nullable="true">
          <Annotation Term="Core.IsLanguageDependent" />
          <Annotation Term="Core.Description" String="Label for the field group" />
        </Property>
        <Property Name="Data" Type="Collection(UI.DataFieldAbstract)" Nullable="false">
          <Annotation Term="Core.Description" String="Collection of data fields" />
        </Property>
      </ComplexType>

      <!-- Under Discussion
        <Term Name="GeoPoints" Type="Collection(Edm.AnnotationPath)" Nullable="false" AppliesTo="EntityType">
        <Annotation Term="Core.Description">
        <String>
        Each collection element MUST reference an annotation of a
        - Communication.Contact or
        - collection of Communication.ContactData or
        - UI.Contacts or
        - UI.GeoLocation or
        - collection of UI.GeoLocationType
        </String>
        </Annotation>
        <Annotation Term="UI.ThingPerspective" />
        </Term>
      -->

      <Term Name="GeoLocations" Type="Collection(UI.GeoLocationType)" Nullable="false" AppliesTo="EntityType">
        <Annotation Term="UI.ThingPerspective" />
        <Annotation Term="Core.Description" String="Collection of geographic locations" />
      </Term>
      <Term Name="GeoLocation" Type="UI.GeoLocationType" AppliesTo="EntityType">
        <Annotation Term="UI.ThingPerspective" />
        <Annotation Term="Core.Description" String="Geographic location" />
      </Term>
      <ComplexType Name="GeoLocationType">
        <Annotation Term="Core.Description" String="Properties that define a geographic location" />
        <Property Name="Latitude" Type="Edm.Double" Nullable="true">
          <Annotation Term="Core.Description" String="Geographic latitude" />
        </Property>
        <Property Name="Longitude" Type="Edm.Double" Nullable="true">
          <Annotation Term="Core.Description" String="Geographic longitude" />
        </Property>
        <Property Name="Location" Type="Edm.GeographyPoint" Nullable="true">
          <Annotation Term="Core.Description" String="A point in a round-earth coordinate system" />
        </Property>
        <Property Name="Address" Type="Communication.AddressType" Nullable="true">
          <Annotation Term="Core.Description" String="vCard-style address" />
        </Property>
      </ComplexType>

      <Term Name="Contacts" Type="Collection(Edm.AnnotationPath)" Nullable="false" AppliesTo="EntityType">
        <Annotation Term="Core.Description" String="Collection of contacts" />
        <Annotation Term="Core.LongDescription" String="Each collection item MUST reference an annotation of a Communication.Contact" />
        <Annotation Term="UI.ThingPerspective" />
      </Term>

      <Term Name="MediaResource" Type="UI.MediaResourceType" AppliesTo="EntityType">
        <Annotation Term="UI.ThingPerspective" />
        <Annotation Term="Core.Description" String="Properties that describe a media resource" />
      </Term>
      <ComplexType Name="MediaResourceType">
        <Property Name="Url" Type="Edm.String" Nullable="false">
          <Annotation Term="Core.Description" String="URL of media resource" />
          <Annotation Term="Core.IsURL" />
        </Property>
        <Property Name="ContentType" Type="Edm.String" Nullable="true">
          <Annotation Term="Core.Description" String="Content type, such as application/pdf, video/x-flv, image/jpeg" />
          <Annotation Term="Core.IsMediaType" />
        </Property>
        <Property Name="ByteSize" Type="Edm.Int64" Nullable="true">
          <Annotation Term="Core.Description" String="Resource size in bytes" />
        </Property>
        <Property Name="ChangedAt" Type="Edm.DateTimeOffset" Nullable="true">
          <Annotation Term="Core.Description" String="Date of last change" />
        </Property>
        <Property Name="Thumbnail" Type="UI.ImageType" Nullable="true">
          <Annotation Term="Core.Description" String="Thumbnail image" />
        </Property>
        <Property Name="Title" Type="UI.DataField" Nullable="false">
          <Annotation Term="Core.Description" String="Resource title" />
        </Property>
        <Property Name="Description" Type="UI.DataField" Nullable="true">
          <Annotation Term="Core.Description" String="Resource description" />
        </Property>
      </ComplexType>
      <ComplexType Name="ImageType">
        <Property Name="Url" Type="Edm.String" Nullable="false">
          <Annotation Term="Core.Description" String="URL of image" />
          <Annotation Term="Core.IsURL" />
        </Property>
        <Property Name="Width" Type="Edm.String" Nullable="true">
          <Annotation Term="Core.Description" String="Width of image" />
        </Property>
        <Property Name="Height" Type="Edm.String" Nullable="true">
          <Annotation Term="Core.Description" String="Height of image" />
        </Property>
      </ComplexType>

      <!-- Under discussion
        <Term Name="AdditionalInfo" Type="Edm.AnnotationPath" AppliesTo="Annotation">
        <Annotation Term="Core.Description">
        <String>
        Applies to UI.GeoLocation and Communication.Contact annotations only
        Provides additional related information for a UI.GeoLocation or Communication.Contact
        Reference to UI.HeaderInfo, UI.Badge, a qualified UI.FieldGroup, or a dedicated property tagged with Core.IsURL
        </String>
        </Annotation>
        </Term>
      -->

      <Term Name="DataPoint" Type="UI.DataPointType" AppliesTo="EntityType">
        <Annotation Term="UI.ThingPerspective" />
        <Annotation Term="Core.Description"
          String="Visualization of a single point of data, typically a number; may also be textual, e.g. a status value" />
      </Term>
      <ComplexType Name="DataPointType">
        <Property Name="Title" Type="Edm.String" Nullable="false">
          <Annotation Term="Core.Description" String="Title of the data point" />
          <Annotation Term="Core.IsLanguageDependent" />
        </Property>
        <Property Name="Description" Type="Edm.String" Nullable="true">
          <Annotation Term="Core.Description" String="Short description" />
          <Annotation Term="Core.IsLanguageDependent" />
        </Property>
        <Property Name="LongDescription" Type="Edm.String" Nullable="true">
          <Annotation Term="Core.Description" String="Full description" />
          <Annotation Term="Core.IsLanguageDependent" />
        </Property>
        <Property Name="Value" Type="Edm.PrimitiveType" Nullable="false">
          <Annotation Term="Core.Description" String="Numeric value" />
          <Annotation Term="Core.LongDescription">
            <String>
              It could be annotated with either `UoM.ISOCurrency` or `UoM.Unit`.
              Percentage values are annotated with `UoM.Unit = '%'`.
              A renderer should take an optional `Common.Text` annotation into consideration.
            </String>
          </Annotation>
        </Property>
        <Property Name="TargetValue" Type="Edm.PrimitiveType" Nullable="true">
          <Annotation Term="Core.Description" String="Target value" />
        </Property>
        <Property Name="ForecastValue" Type="Edm.PrimitiveType" Nullable="true">
          <Annotation Term="Core.Description" String="Forecast value" />
        </Property>
        <Property Name="MinimumValue" Type="Edm.Decimal" Nullable="true">
          <Annotation Term="Core.Description" String="Minimum value (for output rendering)" />
        </Property>
        <Property Name="MaximumValue" Type="Edm.Decimal" Nullable="true">
          <Annotation Term="Core.Description" String="Maximum value (for output rendering)" />
        </Property>
        <Property Name="ValueFormat" Type="UI.NumberFormat" Nullable="true">
          <Annotation Term="Core.Description" String="Number format" />
        </Property>
        <Property Name="Visualization" Type="UI.VisualizationType" Nullable="true">
          <Annotation Term="Core.Description" String="Preferred visualization" />
        </Property>
        <Property Name="SampleSize" Type="Edm.PrimitiveType" Nullable="true">
          <Annotation Term="Core.Description">
            <String>
           	  Sample size used for the determination of the data point; should contain just integer value as Edm.Byte, Edm.SByte, Edm.Intxx, and Edm.Decimal with scale 0.
           	</String>
          </Annotation>
        </Property>
        <Property Name="ReferencePeriod" Type="UI.ReferencePeriod" Nullable="true">
          <Annotation Term="Core.Description" String="Reference period" />
        </Property>
        <Property Name="Criticality" Type="UI.CriticalityType" Nullable="true">
          <Annotation Term="Core.Description" String="Service-calculated criticality, alternative to CriticalityCalculation" />
        </Property>
        <Property Name="CriticalityRepresentation" Type="UI.CriticalityRepresentationType" Nullable="true">
          <Annotation Term="Common.Experimental" />
          <Annotation Term="Core.Description" String="Decides if criticality is visualized in addition by means of an icon" />
        </Property>
        <Property Name="CriticalityCalculation" Type="UI.CriticalityCalculationType" Nullable="true">
          <Annotation Term="Core.Description" String="Parameters for client-calculated criticality, alternative to Criticality" />
        </Property>
        <Property Name="Trend" Type="UI.TrendType" Nullable="true">
          <Annotation Term="Core.Description" String="Service-calculated trend, alternative to TrendCalculation" />
        </Property>
        <Property Name="TrendCalculation" Type="UI.TrendCalculationType" Nullable="true">
          <Annotation Term="Core.Description" String="Parameters for client-calculated trend, alternative to Trend" />
        </Property>
        <Property Name="Responsible" Type="Communication.ContactType" Nullable="true">
          <Annotation Term="Core.Description" String="Contact person" />
        </Property>
      </ComplexType>

      <ComplexType Name="NumberFormat">
        <Annotation Term="Core.Description" String="Describes how to visualise a number" />
        <Property Name="ScaleFactor" Type="Edm.Decimal" Scale="variable" Nullable="true">
          <Annotation Term="Core.Description" String="Factor to scale a value before visualization, e.g. 0.001 for K, 1e-6 for M" />
        </Property>
        <Property Name="NumberOfFractionalDigits" Type="Edm.Byte" Nullable="true">
          <Annotation Term="Core.Description" String="Number of fractional digits of the scaled value to be visualized" />
        </Property>
      </ComplexType>

      <EnumType Name="VisualizationType">
        <Member Name="Number">
          <Annotation Term="Core.Description" String="Visualize as a number" />
        </Member>
        <Member Name="BulletChart">
          <Annotation Term="Core.Description" String="Visualize as bullet chart - requires TargetValue" />
        </Member>
        <Member Name="Progress">
          <Annotation Term="Core.Description" String="Visualize as progress indicator - requires TargetValue" />
        </Member>
        <Member Name="Rating">
          <Annotation Term="Core.Description" String="Visualize as partially or completely filled stars/hearts/... - requires TargetValue" />
        </Member>
        <Member Name="Donut">
          <Annotation Term="Core.Description" String="Visualize as donut, optionally with missing segment - requires TargetValue" />
        </Member>
      </EnumType>

      <ComplexType Name="ReferencePeriod">
        <Annotation Term="Core.Description" String="Reference period" />
        <Property Name="Description" Type="Edm.String" Nullable="true">
          <Annotation Term="Core.Description" String="Short description of the reference period" />
          <Annotation Term="Core.IsLanguageDependent" />
        </Property>
        <Property Name="Start" Type="Edm.DateTimeOffset" Nullable="true">
          <Annotation Term="Core.Description" String="Start of the reference period" />
        </Property>
        <Property Name="End" Type="Edm.DateTimeOffset" Nullable="true">
          <Annotation Term="Core.Description" String="End of the reference period" />
        </Property>
      </ComplexType>

      <EnumType Name="CriticalityType">
        <Annotation Term="Core.Description"
          String="Criticality of a value or status, represented e.g. via semantic colors (https://experience.sap.com/fiori-design-web/foundation/colors/#semantic-colors)" />
        <Member Name="Neutral" Value="0">
          <Annotation Term="Core.Description" String="Neutral / blue status - inactive - open - in progress" />
        </Member>
        <Member Name="Negative" Value="1">
          <Annotation Term="Core.Description" String="Negative / red status - attention - overload - alert" />
        </Member>
        <Member Name="Critical" Value="2">
          <Annotation Term="Core.Description" String="Critical / orange status - warning" />
        </Member>
        <Member Name="Positive" Value="3">
          <Annotation Term="Core.Description" String="Positive / green status - completed - available - on track - acceptable" />
        </Member>
      </EnumType>

      <ComplexType Name="CriticalityCalculationType" BaseType="UI.CriticalityThresholdsType">
        <Annotation Term="Core.Description" String="Describes how to calculate the criticality of a value depending on the improvement direction" />
        <Annotation Term="Core.LongDescription">
          <String>
The calculation is done by comparing a value to the threshold values relevant for the specified improvement direction.

For improvement direction `Target`, the criticality is calculated using both low and high threshold values. It will be
  - Positive if the value is greater than or equal to AcceptanceRangeLowValue and lower than or equal to AcceptanceRangeHighValue
  - Neutral if the value is greater than or equal to ToleranceRangeLowValue and lower than AcceptanceRangeLowValue OR greater than AcceptanceRangeHighValue and lower than or equal to ToleranceRangeHighValue
  - Critical if the value is greater than or equal to DeviationRangeLowValue and lower than ToleranceRangeLowValue OR greater than ToleranceRangeHighValue  and lower than or equal to DeviationRangeHighValue
  - Negative if the value is lower than DeviationRangeLowValue or greater than DeviationRangeHighValue

For improvement direction `Minimize`, the criticality is calculated using the high threshold values. It is
  - Positive if the value is lower than or equal to AcceptanceRangeHighValue
  - Neutral if the value is  greater than AcceptanceRangeHighValue and lower than or equal to ToleranceRangeHighValue
  - Critical if the value is greater than ToleranceRangeHighValue and lower than or equal to DeviationRangeHighValue
  - Negative if the value is greater than DeviationRangeHighValue

For improvement direction `Maximize`, the criticality is calculated using the low threshold values. It is
  - Positive if the value is greater than or equal to AcceptanceRangeLowValue
  - Neutral if the value is less than AcceptanceRangeLowValue and greater than or equal to ToleranceRangeLowValue
  - Critical if the value is lower than ToleranceRangeLowValue and greater than or equal to DeviationRangeLowValue
  - Negative if the value is lower than DeviationRangeLowValue
             
Thresholds are optional. For unassigned values, defaults are determined in this order:
  - For DeviationRange, an omitted LowValue translates into the smallest possible number (-INF), an omitted HighValue translates into the largest possible number (+INF)
  - For ToleranceRange, an omitted LowValue will be initialized with DeviationRangeLowValue, an omitted HighValue will be initialized with DeviationRangeHighValue
  - For AcceptanceRange, an omitted LowValue will be initialized with ToleranceRangeLowValue, an omitted HighValue will be initialized with ToleranceRangeHighValue
          </String>
        </Annotation>
        <Property Name="ImprovementDirection" Type="UI.ImprovementDirectionType" Nullable="false">
          <Annotation Term="Core.Description" String="Describes in which direction the value improves" />
        </Property>
        <Property Name="ConstantThresholds" Type="Collection(UI.LevelThresholdsType)" Nullable="false">
          <Annotation Term="Common.Experimental" />
          <Annotation Term="Core.Description" String="List of thresholds depending on the aggregation level as a set of constant values" />
          <Annotation Term="Core.LongDescription"
            String="Constant thresholds shall only be used in order to refine constant values given for the data point overall (aggregation level with empty collection of property paths), but not if the thresholds are based on other measure elements." />
        </Property>
      </ComplexType>

      <ComplexType Name="CriticalityThresholdsType">
        <Annotation Term="Core.Description" String="Thresholds for calculating the criticality of a value" />
        <Property Name="AcceptanceRangeLowValue" Type="Edm.PrimitiveType" Nullable="true">
          <Annotation Term="Core.Description" String="Lowest value that is considered positive" />
        </Property>
        <Property Name="AcceptanceRangeHighValue" Type="Edm.PrimitiveType" Nullable="true">
          <Annotation Term="Core.Description" String="Highest value that is considered positive" />
        </Property>
        <Property Name="ToleranceRangeLowValue" Type="Edm.PrimitiveType" Nullable="true">
          <Annotation Term="Core.Description" String="Lowest value that is considered neutral" />
        </Property>
        <Property Name="ToleranceRangeHighValue" Type="Edm.PrimitiveType" Nullable="true">
          <Annotation Term="Core.Description" String="Highest value that is considered neutral" />
        </Property>
        <Property Name="DeviationRangeLowValue" Type="Edm.PrimitiveType" Nullable="true">
          <Annotation Term="Core.Description" String="Lowest value that is considered critical" />
        </Property>
        <Property Name="DeviationRangeHighValue" Type="Edm.PrimitiveType" Nullable="true">
          <Annotation Term="Core.Description" String="Highest value that is considered critical" />
        </Property>
      </ComplexType>

      <EnumType Name="ImprovementDirectionType">
        <Annotation Term="Core.Description" String="Describes which direction of a value change is seen as an improvement" />
        <Member Name="Minimize" Value="1">
          <Annotation Term="Core.Description" String="Lower is better" />
        </Member>
        <Member Name="Target" Value="2">
          <Annotation Term="Core.Description" String="Closer to the target is better" />
        </Member>
        <Member Name="Maximize" Value="3">
          <Annotation Term="Core.Description" String="Higher is better" />
        </Member>
      </EnumType>

      <ComplexType Name="LevelThresholdsType" BaseType="UI.CriticalityThresholdsType">
        <Annotation Term="Common.Experimental" />
        <Annotation Term="Core.Description" String="Thresholds for an aggregation level" />
        <Property Name="AggregationLevel" Type="Collection(Edm.PropertyPath)" Nullable="false">
          <Annotation Term="Core.Description" String="Describes in which direction the value improves" />
        </Property>
      </ComplexType>

      <EnumType Name="TrendType">
        <Annotation Term="Core.Description" String="The trend of a value" />
        <Member Name="StrongUp" Value="1">
          <Annotation Term="Core.Description" String="Value grows strongly" />
        </Member>
        <Member Name="Up" Value="2">
          <Annotation Term="Core.Description" String="Value grows" />
        </Member>
        <Member Name="Sideways" Value="3">
          <Annotation Term="Core.Description" String="Value does not significantly grow or shrink" />
        </Member>
        <Member Name="Down" Value="4">
          <Annotation Term="Core.Description" String="Value shrinks" />
        </Member>
        <Member Name="StrongDown" Value="5">
          <Annotation Term="Core.Description" String="Value shrinks strongly" />
        </Member>
      </EnumType>

      <ComplexType Name="TrendCalculationType">
        <Annotation Term="Core.Description" String="Describes how to calculate the trend of a value" />
        <Annotation Term="Core.LongDescription">
          <String>
By default, the calculation is done by comparing the difference between Value and ReferenceValue to the threshold values. 
If IsRelativeDifference is set, the difference of Value and ReferenceValue is divided by ReferenceValue and the relative difference is compared.

The trend is 
  - StrongUp if the difference is greater than or equal to StrongUpDifference
  - Up if the difference is less than StrongUpDifference and greater than or equal to UpDifference
  - Sideways if the difference  is less than UpDifference and greater than DownDifference
  - Down if the difference is greater than StrongDownDifference and lower than or equal to DownDifference
  - StrongDown if the difference is lower than or equal to StrongDownDifference</String>
        </Annotation>
        <Property Name="ReferenceValue" Type="Edm.PrimitiveType" Nullable="false">
          <Annotation Term="Core.Description" String="Reference value for the calculation, e.g. number of sales for the last year" />
        </Property>
        <Property Name="IsRelativeDifference" Type="Edm.Boolean" DefaultValue="false">
          <Annotation Term="Core.Description" String="Calculate with a relative difference" />
        </Property>
        <Property Name="UpDifference" Type="Edm.Decimal" Nullable="false">
          <Annotation Term="Core.Description" String="Threshold for Up" />
        </Property>
        <Property Name="StrongUpDifference" Type="Edm.Decimal" Nullable="false">
          <Annotation Term="Core.Description" String="Threshold for StrongUp" />
        </Property>
        <Property Name="DownDifference" Type="Edm.Decimal" Nullable="false">
          <Annotation Term="Core.Description" String="Threshold for Down" />
        </Property>
        <Property Name="StrongDownDifference" Type="Edm.Decimal" Nullable="false">
          <Annotation Term="Core.Description" String="Threshold for StrongDown" />
        </Property>
      </ComplexType>

      <Term Name="KPI" Type="UI.KPIType" AppliesTo="EntitySet EntityType">
        <Annotation Term="Common.Experimental" />
        <Annotation Term="UI.ThingPerspective" />
        <Annotation Term="Core.Description">
          <String>A Key Performance Indicator (KPI) bundles a SelectionVariant and a DataPoint, and provides details for progressive disclosure</String>
        </Annotation>
      </Term>
      <ComplexType Name="KPIType">
        <Annotation Term="Common.Experimental" />
        <Property Name="ID" Type="Edm.String">
          <Annotation Term="Core.Description">
            <String>Optional identifier to reference this instance from an external context</String>
          </Annotation>
        </Property>
        <Property Name="SelectionVariant" Type="UI.SelectionVariantType" Nullable="false">
          <Annotation Term="Core.Description" String="Selection variant, either specified inline or referencing another annotation via Path" />
        </Property>
        <Property Name="DataPoint" Type="UI.DataPointType" Nullable="false">
          <Annotation Term="Core.Description" String="Data point, either specified inline or referencing another annotation via Path" />
        </Property>
        <Property Name="Detail" Type="UI.KPIDetailType">
          <Annotation Term="Core.Description" String="Contains information about KPI details, especially drill-down presentations" />
        </Property>
      </ComplexType>
      <ComplexType Name="KPIDetailType">
        <Annotation Term="Common.Experimental" />
        <Property Name="DefaultPresentationVariant" Type="UI.PresentationVariantType">
          <Annotation Term="Core.Description" String="Presentation variant, either specified inline or referencing another annotation via Path" />
        </Property>
        <Property Name="AlternativePresentationVariants" Type="Collection(UI.PresentationVariantType)" Nullable="false">
          <Annotation Term="Core.Description"
            String="A list of alternative presentation variants, either specified inline or referencing another annotation via Path" />
        </Property>
      </ComplexType>

      <Term Name="Chart" Type="UI.ChartDefinitionType" AppliesTo="EntityType">
        <Annotation Term="UI.ThingPerspective" />
        <Annotation Term="Core.Description" String="Visualization of multiple data points" />
      </Term>
      <ComplexType Name="ChartDefinitionType">
        <Property Name="Title" Type="Edm.String" Nullable="true">
          <Annotation Term="Core.Description" String="Title of the chart" />
          <Annotation Term="Core.IsLanguageDependent" />
        </Property>
        <Property Name="Description" Type="Edm.String" Nullable="true">
          <Annotation Term="Core.Description" String="Short description" />
          <Annotation Term="Core.IsLanguageDependent" />
        </Property>
        <Property Name="ChartType" Type="UI.ChartType" Nullable="false">
          <Annotation Term="Core.Description" String="Chart type" />
        </Property>
        <Property Name="Measures" Type="Collection(Edm.PropertyPath)" Nullable="false">
          <Annotation Term="Core.Description" String="Measures of the chart, e.g. size and color in a bubble chart" />
        </Property>
        <Property Name="MeasureAttributes" Type="Collection(UI.ChartMeasureAttributeType)" Nullable="false">
          <Annotation Term="Core.Description">
            <String>Describes Attributes for Measures. All Measures used in this collection must also be part of the Measures Property.</String>
          </Annotation>
        </Property>
        <Property Name="Dimensions" Type="Collection(Edm.PropertyPath)" Nullable="false">
          <Annotation Term="Core.Description" String="Dimensions of the chart, e.g. x- and y-axis of a bubble chart" />
        </Property>
        <Property Name="DimensionAttributes" Type="Collection(UI.ChartDimensionAttributeType)" Nullable="false">
          <Annotation Term="Core.Description">
            <String>Describes Attributes for Dimensions. All Dimensions used in this collection must also be part of the Dimensions Property.</String>
          </Annotation>
        </Property>
        <Property Name="Actions" Type="Collection(UI.DataFieldForActionAbstract)" Nullable="false">
          <Annotation Term="Core.Description" String="Available actions" />
        </Property>
      </ComplexType>

      <EnumType Name="ChartType">
        <Member Name="Column" />
        <Member Name="ColumnStacked" />
        <Member Name="ColumnDual" />
        <Member Name="ColumnStackedDual" />
        <Member Name="ColumnStacked100" />
        <Member Name="ColumnStackedDual100" />
        <Member Name="Bar" />
        <Member Name="BarStacked" />
        <Member Name="BarDual" />
        <Member Name="BarStackedDual" />
        <Member Name="BarStacked100" />
        <Member Name="BarStackedDual100" />
        <Member Name="Area" />
        <Member Name="AreaStacked" />
        <Member Name="AreaStacked100" />
        <Member Name="HorizontalArea" />
        <Member Name="HorizontalAreaStacked" />
        <Member Name="HorizontalAreaStacked100" />
        <Member Name="Line" />
        <Member Name="LineDual" />
        <Member Name="Combination" />
        <Member Name="CombinationStacked" />
        <Member Name="CombinationDual" />
        <Member Name="CombinationStackedDual" />
        <Member Name="HorizontalCombinationStacked" />
        <Member Name="Pie" />
        <Member Name="Donut" />
        <Member Name="Scatter" />
        <Member Name="Bubble" />
        <Member Name="Radar" />
        <Member Name="HeatMap" />
        <Member Name="TreeMap" />
        <Member Name="Waterfall" />
        <Member Name="Bullet" />
        <Member Name="VerticalBullet" />
        <!-- Future: GeoPie, GeoBubble, ChoroplethMap -->
      </EnumType>

      <ComplexType Name="ChartDimensionAttributeType">
        <Property Name="Dimension" Type="Edm.PropertyPath" />
        <Property Name="Role" Type="UI.ChartDimensionRoleType" />
      </ComplexType>

      <ComplexType Name="ChartMeasureAttributeType">
        <Property Name="Measure" Type="Edm.PropertyPath" />
        <Property Name="Role" Type="UI.ChartMeasureRoleType" />
        <Property Name="DataPoint" Type="Edm.AnnotationPath" Nullable="true">
          <Annotation Term="Core.Description"
            String="Annotation path MUST end in UI.DataPoint and the DataPoint Value must be the same property as in Measure" />
        </Property>
      </ComplexType>

      <EnumType Name="ChartDimensionRoleType">
        <Member Name="Category" />
        <Member Name="Series" />
      </EnumType>

      <EnumType Name="ChartMeasureRoleType">
        <Member Name="Axis1" />
        <Member Name="Axis2" />
        <Member Name="Axis3" />
      </EnumType>

      <Term Name="SelectionFields" Type="Collection(Edm.PropertyPath)" Nullable="false" AppliesTo="EntityType">
        <Annotation Term="UI.ThingPerspective" />
        <Annotation Term="Core.Description" String="Properties that might be relevant for filtering a collection of entities of this type" />
      </Term>


      <!-- Segmentation of content according to facets of the Object -->

      <Term Name="Facets" Type="Collection(UI.Facet)" Nullable="false" AppliesTo="EntityType">
        <Annotation Term="Core.Description" String="Collection of facets" />
      </Term>

      <Term Name="HeaderFacets" Type="Collection(UI.Facet)" AppliesTo="EntityType">
        <Annotation Term="Core.Description" String="Facets for additional object header information" />
      </Term>

      <Term Name="QuickViewFacets" Type="Collection(UI.Facet)" AppliesTo="EntityType">
        <Annotation Term="Core.Description" String="Facets that may be used for a quick overview of the object" />
      </Term>

      <Term Name="QuickCreateFacets" Type="Collection(UI.Facet)" AppliesTo="EntityType">
        <Annotation Term="Core.Description" String="Facets that may be used for a (quick) create of the object" />
      </Term>

      <Term Name="FilterFacets" Type="Collection(UI.ReferenceFacet)" AppliesTo="EntityType">
        <Annotation Term="Core.Description" String="Facets that reference UI.FieldGroup annotations to group filterable fields" />
      </Term>

      <ComplexType Name="Facet" Abstract="true">
        <Annotation Term="Core.Description" String="Abstract base type for facets" />
        <Property Name="Label" Type="Edm.String" Nullable="true">
          <Annotation Term="Core.IsLanguageDependent" />
          <Annotation Term="Core.Description" String="Facet label" />
        </Property>
        <Property Name="ID" Type="Edm.String" Nullable="true">
          <Annotation Term="Core.Description"
            String="Unique identifier of a facet. ID should be stable, as long as the perceived semantics of the facet is unchanged." />
        </Property>
      </ComplexType>
      <ComplexType Name="CollectionFacet" BaseType="UI.Facet">
        <Annotation Term="Core.Description" String="Collection of facets" />
        <Property Name="Facets" Type="Collection(UI.Facet)" Nullable="false">
          <Annotation Term="Core.Description"
            String="Nested facets. An empty collection may be used as a placeholder for content added via extension points." />
        </Property>
      </ComplexType>
      <ComplexType Name="ReferenceFacet" BaseType="UI.Facet">
        <Annotation Term="Core.Description" String="Facet that refers to a thing perspective, e.g. LineItem" />
        <Property Name="Target" Type="Edm.AnnotationPath" Nullable="false">
          <Annotation Term="Core.Description"
            String="Referenced information: Communication.Contact, Communication.Address, or a term that is tagged with UI.ThingPerspective, e.g. UI.StatusInfo, UI.LineItem, UI.Identification, UI.FieldGroup, UI.Badge" />
        </Property>
      </ComplexType>
      <ComplexType Name="ReferenceURLFacet" BaseType="UI.Facet">
        <Annotation Term="Core.Description" String="Facet that refers to a URL" />
        <Property Name="Url" Type="Edm.String" Nullable="false">
          <Annotation Term="Core.IsURL" />
          <Annotation Term="Core.Description" String="URL of referenced information" />
        </Property>
        <Property Name="UrlContentType" Type="Edm.String" Nullable="true">
          <Annotation Term="Core.IsMediaType" />
          <Annotation Term="Core.Description" String="Media type of referenced information" />
        </Property>
      </ComplexType>


      <Term Name="SelectionPresentationVariant" Type="UI.SelectionPresentationVariantType" AppliesTo="EntitySet EntityType">
        <Annotation Term="UI.ThingPerspective" />
        <Annotation Term="Core.Description">
          <String>A SelectionPresentationVariant bundles a Selection Variant and a Presentation Variant</String>
        </Annotation>
      </Term>
      <ComplexType Name="SelectionPresentationVariantType">
        <Property Name="ID" Type="Edm.String">
          <Annotation Term="Core.Description">
            <String>Optional identifier to reference this variant from an external context</String>
          </Annotation>
        </Property>
        <Property Name="Text" Type="Edm.String">
          <Annotation Term="Core.IsLanguageDependent" />
          <Annotation Term="Core.Description" String="Name of the bundling variant" />
        </Property>
        <Property Name="SelectionVariant" Type="UI.SelectionVariantType" Nullable="false">
          <Annotation Term="Core.Description" String="Selection variant, either specified inline or referencing another annotation via Path" />
        </Property>
        <Property Name="PresentationVariant" Type="UI.PresentationVariantType" Nullable="false">
          <Annotation Term="Core.Description" String="Presentation variant, either specified inline or referencing another annotation via Path" />
        </Property>
      </ComplexType>

      <Term Name="PresentationVariant" Type="UI.PresentationVariantType" AppliesTo="EntitySet EntityType">
        <Annotation Term="Core.Description">
          <String>Defines how the result of a queried collection of entities is shaped and how this result is displayed</String>
        </Annotation>
      </Term>
      <ComplexType Name="PresentationVariantType">
        <Property Name="ID" Type="Edm.String">
          <Annotation Term="Core.Description" String="Optional identifier to reference this variant from an external context" />
        </Property>
        <Property Name="Text" Type="Edm.String">
          <Annotation Term="Core.IsLanguageDependent" />
          <Annotation Term="Core.Description" String="Name of the presentation variant" />
        </Property>
        <Property Name="MaxItems" Type="Edm.Int32">
          <Annotation Term="Core.Description" String="Maximum number of items that should be included in the result" />
        </Property>
        <Property Name="SortOrder" Type="Collection(Common.SortOrderType)" Nullable="false">
          <Annotation Term="Core.Description"
            String="Collection can be provided inline or as a reference to a Common.SortOrder annotation via Path" />
        </Property>
        <Property Name="GroupBy" Type="Collection(Edm.PropertyPath)" Nullable="false">
          <Annotation Term="Core.Description">
            <String>Sequence of groupable properties p1, p2, ... defining how the result is composed of instances representing groups, 
            one for each combination of value properties in the queried collection. The sequence specifies a certain level
            of aggregation for the queried collection, and every group instance will provide aggregated values for
            properties that are aggregatable. Moreover, the series of sub-sequences (p1), (p1, p2), ... forms a leveled hierarchy,
            which may become relevant in combination with InitialExpansionLevel.</String>
          </Annotation>
        </Property>
        <Property Name="TotalBy" Type="Collection(Edm.PropertyPath)" Nullable="false">
          <Annotation Term="Core.Description">
            <String>Sub-sequence q1, q2, ... of properties p1, p2, ... specified in GroupBy. With this, additional levels of aggregation 
            are requested in addition to the most granular level defined by GroupBy: Every element in the series of sub-sequences 
            (q1), (q1, q2), ... introduces an additional aggregation level included in the result.</String>
          </Annotation>
        </Property>
        <Property Name="Total" Type="Collection(Edm.PropertyPath)" Nullable="false">
          <Annotation Term="Core.Description">
            <String>Aggregatable properties for which aggregated values should be provided for the additional aggregation levels specified in TotalBy.</String>
          </Annotation>
        </Property>
        <Property Name="IncludeGrandTotal" Type="Edm.Boolean">
          <Annotation Term="Core.Description" String="Result should include a grand total for the properties specified in Total" />
        </Property>
        <Property Name="InitialExpansionLevel" Type="Edm.Int32" DefaultValue="1">
          <Annotation Term="Core.Description">
            <String>Initial number of levels to expand in a hierarchy defined for the queried collection.
            The hierarchy may be implicitly imposed by the sequence of the GroupBy, or by an explicit hierarchy annotation.</String>
          </Annotation>
        </Property>
        <Property Name="Visualizations" Type="Collection(Edm.AnnotationPath)" Nullable="false">
          <Annotation Term="Core.Description">
            <String>Lists available visualization types. Currently supported types are UI.LineItem, UI.Chart, and UI.DataPoint.
              For each type, no more than a single annotation is meaningful. Multiple instances of the same visualization type
              shall be modeled with different PresentationVariants. 
              A reference to UI.Lineitem should always be part of collection (least common denominator for renderers).
              The first entry of the collection is the default visualization.
            </String>
          </Annotation>
        </Property>
        <Property Name="RequestAtLeast" Type="Collection(Edm.PropertyPath)" Nullable="false">
          <Annotation Term="Core.Description" String="Properties that should always be included in the result of the queried collection" />
        </Property>
        <Property Name="SelectionFields" Type="Collection(Edm.PropertyPath)" Nullable="false">
          <Annotation Term="Common.Experimental" />
          <Annotation Term="Core.Description">
            <String>Properties that should be presented for filtering a collection of entities. 
            Can be provided inline or as a reference to a UI.SelectionFields annotation via Path.</String>
          </Annotation>
        </Property>
      </ComplexType>

      <Term Name="SelectionVariant" Type="UI.SelectionVariantType" AppliesTo="EntitySet EntityType">
        <Annotation Term="Core.Description">
          <String>A SelectionVariant denotes a combination of parameters and filters to query the annotated entity set</String>
        </Annotation>
      </Term>
      <ComplexType Name="SelectionVariantType">
        <Property Name="ID" Type="Edm.String" Nullable="true">
          <Annotation Term="Core.Description">
            <String> May contain identifier to reference this instance from an external context</String>
          </Annotation>
        </Property>
        <Property Name="Text" Type="Edm.String" Nullable="true">
          <Annotation Term="Core.IsLanguageDependent" />
          <Annotation Term="Core.Description" String="Name of the selection variant" />
        </Property>
        <Property Name="Parameters" Type="Collection(UI.ParameterAbstract)" Nullable="false">
          <Annotation Term="Core.Description" String="Parameters of the selection variant" />
        </Property>
        <Property Name="FilterExpression" Type="Edm.String" Nullable="true">
          <Annotation Term="Core.Description">
            <String>Filter string for query part of URL, without '$filter ='</String>
          </Annotation>
        </Property>
        <Property Name="SelectOptions" Type="Collection(UI.SelectOptionType)" Nullable="false">
          <Annotation Term="Core.Description">
            <String>ABAP Select Options Pattern</String>
          </Annotation>
        </Property>
      </ComplexType>

      <ComplexType Name="ParameterAbstract" Abstract="true">
        <Annotation Term="Core.Description" String="Key property of a parameter entity type" />
      </ComplexType>
      <ComplexType Name="Parameter" BaseType="UI.ParameterAbstract">
        <Annotation Term="Core.Description" String="Single-valued parameter" />
        <Property Name="PropertyName" Type="Edm.PropertyPath" Nullable="false">
          <Annotation Term="Core.Description" String="Path to a key property of a parameter entity type" />
        </Property>
        <Property Name="PropertyValue" Type="Edm.PrimitiveType" Nullable="false">
          <Annotation Term="Core.Description" String="Value for the key property" />
        </Property>
      </ComplexType>
      <ComplexType Name="IntervalParameter" BaseType="UI.ParameterAbstract">
        <Annotation Term="Core.Description" String="Interval parameter formed with a 'from' and a 'to' property" />
        <Property Name="PropertyNameFrom" Type="Edm.PropertyPath" Nullable="false">
          <Annotation Term="Core.Description" String="Path to the 'from' property of a parameter entity type" />
        </Property>
        <Property Name="PropertyValueFrom" Type="Edm.PrimitiveType" Nullable="false">
          <Annotation Term="Core.Description" String="Value for the 'from' property" />
        </Property>
        <Property Name="PropertyNameTo" Type="Edm.PropertyPath" Nullable="false">
          <Annotation Term="Core.Description" String="Path to the 'to' property of a parameter entity type" />
        </Property>
        <Property Name="PropertyValueTo" Type="Edm.PrimitiveType" Nullable="false">
          <Annotation Term="Core.Description" String="Value for the 'to' property" />
        </Property>
      </ComplexType>

      <ComplexType Name="SelectOptionType">
        <Annotation Term="Core.Description" String="List of value ranges for a single property" />
        <Property Name="PropertyName" Type="Edm.PropertyPath" Nullable="false">
          <Annotation Term="Core.Description" String="Path to the property" />
        </Property>
        <Property Name="Ranges" Type="Collection(UI.SelectionRangeType)" Nullable="false">
          <Annotation Term="Core.Description" String="List of value ranges" />
        </Property>
      </ComplexType>

      <ComplexType Name="SelectionRangeType">
        <Annotation Term="Core.Description">
          <String>Value range. If the range option only requires a single value, the value must be in the property Low</String>
        </Annotation>
        <Property Name="Sign" Type="UI.SelectionRangeSignType" Nullable="false">
          <Annotation Term="Core.Description" String="Include or exclude values" />
        </Property>
        <Property Name="Option" Type="UI.SelectionRangeOptionType" Nullable="false">
          <Annotation Term="Core.Description" String="Comparison operator" />
        </Property>
        <Property Name="Low" Type="Edm.PrimitiveType" Nullable="false">
          <Annotation Term="Core.Description" String="Single value or lower interval boundary" />
        </Property>
        <Property Name="High" Type="Edm.PrimitiveType">
          <Annotation Term="Core.Description" String="Upper interval boundary" />
        </Property>
      </ComplexType>

      <EnumType Name="SelectionRangeSignType">
        <Member Name="I">
          <Annotation Term="Core.Description" String="Inclusive" />
        </Member>
        <Member Name="E">
          <Annotation Term="Core.Description" String="Exclusive" />
        </Member>
      </EnumType>

      <EnumType Name="SelectionRangeOptionType">
        <Annotation Term="Core.Description" String="Comparison operator" />
        <Member Name="EQ">
          <Annotation Term="Core.Description" String="Equal to" />
        </Member>
        <Member Name="BT">
          <Annotation Term="Core.Description" String="Between" />
        </Member>
        <Member Name="CP">
          <Annotation Term="Core.Description" String="Contains pattern" />
        </Member>
        <Member Name="LE">
          <Annotation Term="Core.Description" String="Less than or equal to" />
        </Member>
        <Member Name="GE">
          <Annotation Term="Core.Description" String="Greater than or equal to" />
        </Member>
        <Member Name="NE">
          <Annotation Term="Core.Description" String="Not equal to" />
        </Member>
        <Member Name="NB">
          <Annotation Term="Core.Description" String="Not between" />
        </Member>
        <Member Name="NP">
          <Annotation Term="Core.Description" String="Does not contain pattern" />
        </Member>
        <Member Name="GT">
          <Annotation Term="Core.Description" String="Greater than" />
        </Member>
        <Member Name="LT">
          <Annotation Term="Core.Description" String="Less than" />
        </Member>
      </EnumType>


      <!-- basic type definitions for reuse -->

      <Term Name="ThingPerspective" Type="Core.Tag" DefaultValue="true" AppliesTo="Term">
        <Annotation Term="Core.Description" String="This term is a Thing Perspective" />
      </Term>
      <Term Name="IsSummary" Type="Core.Tag" DefaultValue="true" AppliesTo="Record">
        <Annotation Term="Core.Description"
          String="This Facet and all included Facets are the summary of the thing. At most one Facet of a thing can be tagged with this term" />
        <Annotation Term="Core.RequiresType" String="UI.Facet" />
      </Term>
      <Term Name="PartOfPreview" Type="Core.Tag" DefaultValue="true" AppliesTo="Record">
        <Annotation Term="Core.Description" String="This Facet and all included Facets are part of the Thing preview" />
        <Annotation Term="Core.RequiresType" String="UI.Facet" />
      </Term>
      <Term Name="Map" Type="Core.Tag" DefaultValue="true" AppliesTo="Record">
        <Annotation Term="Core.Description" String="Target MUST reference a UI.GeoLocation, Communication.Address or a collection of these" />
        <Annotation Term="Core.RequiresType" String="UI.ReferenceFacet" />
      </Term>
      <Term Name="Gallery" Type="Core.Tag" DefaultValue="true" AppliesTo="Record">
        <Annotation Term="Core.Description" String="Target MUST reference a UI.MediaResource" />
        <Annotation Term="Core.RequiresType" String="UI.ReferenceFacet" />
      </Term>

      <Term Name="IsImageURL" Type="Core.Tag" DefaultValue="true" AppliesTo="Property Term">
        <Annotation Term="Core.Description"
          String="Properties and terms annotated with this term MUST contain a valid URL referencing an resource with a MIME type image" />
        <Annotation Term="Core.RequiresType" String="Edm.String" />
      </Term>

      <Term Name="MultiLineText" Type="Core.Tag" DefaultValue="true" AppliesTo="Property PropertyValue">
        <Annotation Term="Core.Description"
          String="Properties annotated with this annotation should be rendered as multi-line text (e.g. text area)" />
        <Annotation Term="Core.RequiresType" String="Edm.String" />
      </Term>

      <Term Name="TextArrangement" Type="UI.TextArrangementType" AppliesTo="Annotation EntityType">
        <Annotation Term="Core.Description" String="Describes the arrangement of a code or ID value and its text" />
        <Annotation Term="Core.LongDescription" String="If used for a single property the Common.Text annotation is annotated" />
      </Term>
      <EnumType Name="TextArrangementType">
        <Member Name="TextFirst">
          <Annotation Term="Core.Description" String="Text is first, followed by the code/ID (e.g. in parentheses)" />
        </Member>
        <Member Name="TextLast">
          <Annotation Term="Core.Description" String="Code/ID is first, followed by the text (e.g. separated by a dash)" />
        </Member>
        <Member Name="TextSeparate">
          <Annotation Term="Core.Description" String="Code/ID and text are represented separately" />
        </Member>
        <Member Name="TextOnly">
          <Annotation Term="Core.Description" String="Only text is represented, code/ID is hidden (e.g. for UUIDs)" />
        </Member>
      </EnumType>

      <!-- Under discussion
        <Term Name="DisplayTimeZone" Type="?Edm.Int32?" AppliesTo="Property">
        <Annotation Term="Core.Description">
        <String>Contains information for time- or date-time-fields in which time zone the time value should be displayed.</String>
        </Annotation>
        </Term>
      -->

      <Term Name="Importance" Type="UI.ImportanceType" AppliesTo="Annotation Record">
        <Annotation Term="Core.Description" String="Expresses the importance of e.g. a DataField or an annotation" />
      </Term>
      <EnumType Name="ImportanceType">
        <Member Name="High">
          <Annotation Term="Core.Description" String="High importance" />
        </Member>
        <Member Name="Medium">
          <Annotation Term="Core.Description" String="Medium importance" />
        </Member>
        <Member Name="Low">
          <Annotation Term="Core.Description" String="Low importance" />
        </Member>
      </EnumType>

      <Term Name="Hidden" Type="Core.Tag" DefaultValue="true" AppliesTo="Property">
        <Annotation Term="Core.Description" String="Properties annotated with this term will not be rendered at all" />
      </Term>

      <Term Name="HiddenFilter" Type="Core.Tag" DefaultValue="true" AppliesTo="Property">
        <Annotation Term="Core.Description" String="Properties annotated with this term will not be rendered as filter criteria" />
      </Term>

      <ComplexType Name="DataFieldAbstract" Abstract="true">
        <Property Name="Label" Type="Edm.String" Nullable="true">
          <Annotation Term="Core.Description" String="A short, human-readable text suitable for labels and captions in UIs" />
          <Annotation Term="Core.IsLanguageDependent" />
        </Property>
        <Property Name="Criticality" Type="UI.CriticalityType" Nullable="true">
          <Annotation Term="Core.Description" String="Criticality of the data field value" />
        </Property>
        <Property Name="CriticalityRepresentation" Type="UI.CriticalityRepresentationType" Nullable="true">
          <Annotation Term="Core.Description" String="Decides if criticality is visualized in addition by means of an icon" />
        </Property>
        <Property Name="IconUrl" Type="Edm.String" Nullable="true">
          <Annotation Term="Core.Description" String="Optional icon to decorate the value" />
          <Annotation Term="Core.IsURL" />
        </Property>
      </ComplexType>

      <EnumType Name="CriticalityRepresentationType">
        <Member Name="WithIcon">
          <Annotation Term="Core.Description" String="Criticality is represented with an icon" />
        </Member>
        <Member Name="WithoutIcon">
          <Annotation Term="Core.Description" String="Criticality is represented without icon, e.g. only via text color" />
        </Member>
      </EnumType>

      <ComplexType Name="DataFieldForAnnotation" BaseType="UI.DataFieldAbstract">
        <Property Name="Target" Type="Edm.AnnotationPath">
          <Annotation Term="Core.Description"
            String="Annotation path MUST end in Communication.Contact, Communication.Address, UI.DataPoint or UI.Chart" />
        </Property>
      </ComplexType>

      <ComplexType Name="DataFieldForActionAbstract" BaseType="UI.DataFieldAbstract" Abstract="true">
        <Annotation Term="Core.Description" String="Abstract type to bundle DataFieldForAction and DataFieldForIntentBasedNavigation" />
        <Property Name="Inline" Type="Edm.Boolean" Nullable="true">
          <Annotation Term="Core.Description" String="Action should be placed close to (or even inside) the visualized term" />
        </Property>
        <Property Name="Determining" Type="Edm.Boolean" DefaultValue="false" Nullable="true">
          <Annotation Term="Core.Description" String="Determines whether the action completes a process step (e.g. approve, reject)." />
        </Property>
      </ComplexType>

      <ComplexType Name="DataFieldForAction" BaseType="UI.DataFieldForActionAbstract">
        <Annotation Term="Core.Description" String="The action is NOT tied to a data value (in contrast to DataFieldWithAction)" />
        <Property Name="Action" Type="Common.QualifiedName" Nullable="false">
          <Annotation Term="Core.Description" String="Qualified name of an Action, Function, ActionImport or FunctionImport in scope" />
        </Property>
        <Property Name="InvocationGrouping" Type="UI.OperationGroupingType">
          <Annotation Term="Core.Description" String="Expresses how invocations of this action on multiple instances should be grouped" />
        </Property>
      </ComplexType>
      <EnumType Name="OperationGroupingType">
        <Member Name="Isolated" />
        <Member Name="ChangeSet" />
      </EnumType>

      <ComplexType Name="DataFieldForIntentBasedNavigation" BaseType="UI.DataFieldForActionAbstract">
        <Annotation Term="Core.Description"
          String="The navigation intent is NOT tied to a data value (in contrast to DataFieldWithIntentBasedNavigation), the data field represents a navigation trigger." />
        <Property Name="SemanticObject" Type="Edm.String" Nullable="false">
          <Annotation Term="Core.Description" String="Name of the Semantic Object" />
        </Property>
        <Property Name="Action" Type="Edm.String">
          <Annotation Term="Core.Description"
            String="Name of the Action on the Semantic Object. If not specified, let user choose which of the available actions to trigger." />
        </Property>
        <Property Name="RequiresContext" Type="Edm.Boolean" DefaultValue="true">
          <Annotation Term="Core.Description" String="Determines whether  a context needs to be passed to the target of this navigation." />
        </Property>
      </ComplexType>

      <ComplexType Name="DataField" BaseType="UI.DataFieldAbstract">
        <Property Name="Value" Type="Edm.PrimitiveType" Nullable="false">
          <Annotation Term="Core.Description" String="Value of the data field value" />
          <Annotation Term="Core.IsLanguageDependent" />
        </Property>
      </ComplexType>

      <ComplexType Name="DataFieldWithAction" BaseType="UI.DataField">
        <Annotation Term="Core.Description"
          String="The action is tied to a data value which could be render as a button or link that triggers the action. This is in contrast to DataFieldForAction which is not tied to a specific data value." />
        <Property Name="Action" Type="Common.QualifiedName" Nullable="false">
          <Annotation Term="Core.Description" String="Qualified name of an Action, Function, ActionImport or FunctionImport in scope" />
        </Property>
      </ComplexType>

      <ComplexType Name="DataFieldWithIntentBasedNavigation" BaseType="UI.DataField">
        <Annotation Term="Core.Description"
          String="The navigation intent is tied to a data value which should be rendered as a hyperlink. This is in contrast to DataFieldForIntentBasedNavigation which is not tied to a specific data value." />
        <Property Name="SemanticObject" Type="Edm.String" Nullable="false">
          <Annotation Term="Core.Description" String="Name of the Semantic Object" />
        </Property>
        <Property Name="Action" Type="Edm.String">
          <Annotation Term="Core.Description"
            String="Name of the Action on the Semantic Object. If not specified, let user choose which of the available actions to trigger." />
        </Property>
      </ComplexType>

      <ComplexType Name="DataFieldWithNavigationPath" BaseType="UI.DataField">
        <Property Name="Target" Type="Edm.NavigationPropertyPath" Nullable="false">
          <Annotation Term="Core.Description">
            <String>Contains either a navigation property or a term cast, where term is of type Edm.EntityType or a concrete entity type or a collection of these types</String>
          </Annotation>
        </Property>
      </ComplexType>

      <ComplexType Name="DataFieldWithUrl" BaseType="UI.DataField">
        <Property Name="Url" Type="Edm.String" Nullable="false">
          <Annotation Term="Core.Description" String="Target of the hyperlink" />
          <Annotation Term="Core.IsURL" />
        </Property>
        <Property Name="UrlContentType" Type="Edm.String" Nullable="true">
          <Annotation Term="Core.Description" String="Media type of the hyperlink target, e.g. `videp/mp4`" />
          <Annotation Term="Core.IsMediaType" />
        </Property>
      </ComplexType>

    </Schema>
  </edmx:DataServices>
</edmx:Edmx>
