# ---------------------------------------------------------------------------
# define id of cloud foundry credentials (CF_USERNAME & CF_PASSWORD)
# ---------------------------------------------------------------------------
# as configured in Credentials section of Jenkins
cfCredentialsId=
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# define GitHub credentials
# ---------------------------------------------------------------------------
# as configured in Credentials section of Jenkins
#ssh credentials for write access to git (e.g. for versioning)
gitSSHCredentials=
#"Personal access token" for access to GitHub REST API
#has to be stored in password part of the credentials
githubCredentials=
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# define Git information - overwrite Jenkins default
# ---------------------------------------------------------------------------
gitUserName=thor
gitUserEMail=vladislav.leonkev@sap.com
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# define Cloud Access Manager (CAM) credentials
# Note: For productive deployment without CAM Credentials
#       use value of cfCredentialsId also for camCredentialsId
#       and leave camSystemRole empty
# ---------------------------------------------------------------------------
# as configured in Credentials section of Jenkins
camCredentialsId=
# System role for your solution as maintained in SPC
camSystemRole=
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# define PPMS I7P credentials
# ---------------------------------------------------------------------------
# as configured in Credentials section of Jenkins
ppmsCredentials=

# ---------------------------------------------------------------------------
# define SourceClear credentials
# ---------------------------------------------------------------------------
# as configured in Credentials section of Jenkins
sourceClearCredentialsId=SRCCLR_API_TOKEN

# ---------------------------------------------------------------------------
# define xMake build quality "Milestone" or "Release"
# ---------------------------------------------------------------------------
#xMakeBuildQuality=Release
#git url of non-Abap Assemblys release fork
xMakeNaasReleaseForkRepo=
xMakeShipmentType=indirectshipment
xMakeNovaCredentialsId=xmakeNova
xMakeDevCredentialsId=xmakeDev
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# define cloud foundry environment (org, space) including application manifests
# ---------------------------------------------------------------------------
cfApiEndpoint=https://api.cf.sap.hana.ondemand.com
cfOrg=
cfTestSpace=
cfTestManifest=

cfPerfSpace=
cfPerfManifest=

cfProdApiEndpoint=https://api.cf.sap.hana.ondemand.com
cfProdOrg=
cfProdSpace=
cfProdManifest=
# Technical user to be used for app deployment in prod space
cfProdUser=

# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# Extension points - name & location of groovy files
# ---------------------------------------------------------------------------
# custom integration tests
extensionIntegrationTestScript=.pipeline/integration.groovy

# ---------------------------------------------------------------------------
# define cloud foundry application name
# ---------------------------------------------------------------------------
cfAppName=
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# define email notification distribution list
# ---------------------------------------------------------------------------
#notificationRecipients=
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# define Checkmarx project name & groupId
# ---------------------------------------------------------------------------
checkmarxProject=cds-compiler
checkmarxGroupId=49e3e4b5-9e89-4781-b14f-32a11bfdd1a5
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# Control execution of OPA tests
# ---------------------------------------------------------------------------
runOpaTests=false
opaTimeout=5
modulesToCheckWithOpa=
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# Operations-related information
# ---------------------------------------------------------------------------
# Spring Boot by default provides the endpoint /health for health checks
healthCheckUrlAcceptance=
healthCheckUrlPerformance=
healthCheckUrlProduction=
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# Control execution of acceptance tests
# ---------------------------------------------------------------------------
runFunctionalAcceptanceTests=false
accTestUrl=
# git url to repository with acceptance tests. Leave empty if tests are in current repo
accTestRepository=
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# Control execution of performance tests
# ---------------------------------------------------------------------------
runPerformanceUnitTests=false
runPerformanceJMeterTests=false
perfJMeterTestRepository=
perfJMeterTestUrl=
runPerformanceSUT=false
perfSUTRepository=
perfSUTestUrl=
#SUT output csv file, e.g.: testAngularCC.csv
perfSUTResultCSV=
#id of the SUT test case: e.g. WDTest#testAngularCC
perfSUTTestCase=
# ---------------------------------------------------------------------------

# ---------------------------------------------------------------------------
# define InfluxDB host
# ---------------------------------------------------------------------------
# host where InfluxDB is installed
# rest of the configuration done in Jenkins system configuration
# use empty string if no InfluxDB is used
influxDBServer=jenkins
# ---------------------------------------------------------------------------
