const dependencies = {
  get BaseClient () {
    const BaseClient = require('./client/BaseClient')
    Object.defineProperty(dependencies, 'BaseClient', {value: BaseClient})
    return BaseClient
  },
  get errors () {
    const errors = require('./errors')
    Object.defineProperty(dependencies, 'errors', {value: errors})
    return errors
  },
  get builder () {
    const sqlBuilder = require('./sql-builder/')
    Object.defineProperty(dependencies, 'builder', {value: sqlBuilder})
    return sqlBuilder
  },
  get expand () {
    const expand = require('./expand/expandCQNToJoin')
    expand.rawToExpanded = require('./expand/rawToExpanded')

    Object.defineProperty(dependencies, 'expand', {value: expand})
    return expand
  },
  get contains () {
    const contains = require('./contains/containsCQNToLike')

    Object.defineProperty(dependencies, 'contains', {value: contains})
    return contains
  },
  get postProcessing () {
    const postProcessing = require('./data-conversion/post-processing')
    Object.defineProperty(dependencies, 'postProcessing', {value: postProcessing})
    return postProcessing
  },
  get onCond () {
    const onCond = require('./oncond/generateOnCond')
    Object.defineProperty(dependencies, 'getOnCond', {value: onCond})
    return onCond
  },
  get utils () {
    const utils = require('./util/columns')
    Object.defineProperty(dependencies, 'utils', {value: utils})
    return utils
  },
  inject: (...args) => {
    return require('./cds').inject(...args)
  }
}

module.exports = dependencies
