const {getError} = require('../../errors/index')
const cds = require('../../cds')

/**
 * Convert the data object into key=value, key2=value string
 * @param {Object} data
 * @return {string}
 * @private
 */
const _dataToString = (data) => {
  const ids = []

  for (const key of Object.keys(data)) {
    ids.push(`${key}=${data[key]}`)
  }

  return ids.join(',')
}

const _keyNames = (target) => {
  const keys = cds.reflect(target).keys

  if (!keys) {
    return
  }

  const list = []

  for (const key of Object.keys(keys)) {
    if (keys[key].foreignKeys) {
      for (const foreignKey of Object.keys(keys[key].foreignKeys)) {
        list.push(`${key}_${foreignKey}`)
      }
    } else {
      list.push(key)
    }
  }

  if (list.length > 0) {
    return list
  }
}

/**
 * Get the requested key value pairs from the request.
 * @param {Object} context
 * @return {string}
 * @private
 */
const _getKeysAndValues = (context) => {
  const keys = _keyNames(context.target)

  if (keys) {
    const data = {}

    for (const key of keys) {
      data[key] = context.data[key]
    }

    if (Object.keys(data).length === 1) {
      return data[Object.keys(data)[0]]
    }

    return _dataToString(data)
  }

  return _dataToString(context.data)
}

/**
 * Rather than givning an abstract 404 error, add details which entity with which ID was requested.
 * @param {Object} context
 * @return {Error}
 */
const notFound = (context) => {
  return getError(404, `${context.target.name}(${_getKeysAndValues(context)}) not found`)
}

module.exports = notFound
