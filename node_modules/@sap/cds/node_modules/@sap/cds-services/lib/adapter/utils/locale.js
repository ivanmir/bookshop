const cds = require('../../cds')

const WHITE_LIST = ['zh_CN', 'zh_HK', 'zh_TW', 'en_GB', 'fr_CA', 'pt_PT', 'es_CO', 'es_MX', 'en_US_x_saptrc', 'en_US_x_sappsd']

/**
 *
 * @param {string} lang
 * @returns {string}
 *
 * @example:
 * en
 * en-EN
 * en_EN
 * fr-CH, fr;q=0.9
 * de-DE-1996
 * sr-Lat
 * en_US_x_saptrc
 * en_US_x_sappsd
 *
 * @private
 */
const _getLanguage = (lang = '') => {
  if (WHITE_LIST.includes(lang)) {
    return lang
  }

  const [match] = lang.split(/[,;]+/)[0].trim().match(/^([a-z]{2}(?:[-_][A-Z][A-z]{1,2}(?:[_-][0-9]{4})?(?:[_-][a-z]+)*)?)$/) || []

  return match ? match.substring(0, 2) : undefined
}

/**
 * Negotiate locale using the following priority list:
 * sap-language (Query Parameter)
 * Sap language (Header)
 * JWT (TBD)
 * Locale Header
 * Default Language from service option (defaultLocale)
 * Configuration at package.json
 * 'en'
 *
 * @param {Object} req
 * @param {Object} options
 * @returns {string}
 */
const negotiateLocale = (req, options) => {
  return _getLanguage(req.getIncomingRequest().query['sap-language']) ||
  _getLanguage(req.getHeader('x-sap-request-language')) ||
  _getLanguage(req.getHeader('accept-language')) ||
  _getLanguage(options.defaultLocale) ||
  (cds.config.i18n ? _getLanguage(cds.config.i18n.default_language) : undefined) ||
  'en'
}

module.exports = negotiateLocale
