/**
 * Converts the error code to a string if it is a number.
 *
 * @param err - that will be adapted if necessary
 * @returns {Error} - input param with adapted error code if necessary
 */
const convertErrorCodeToString = (err) => {
  if (typeof err.code === 'number') {
    err.code = err.code.toString()
  }

  return err
}

const convertToISO = (element) => {
  return new Date(element).toISOString()
}

const convertToISONoMillis = (element) => {
  if (element) {
    const dateTime = new Date(element).toISOString()
    return dateTime.slice(0, 19) + dateTime.slice(23)
  }

  return null
}

// const convertToBuffer = (element) => { return Buffer.from(element) }
const convertToString = (element) => {
  return Buffer.from(element, 'base64').toString()
}

module.exports = {
  convertToISO,
  convertToISONoMillis,
  convertErrorCodeToString,
  convertToString
}
