'use strict';

class AbstractCachingStrategy {

    /**
     * @abstract
     * @param {Map} cacheEntries The entries of the cache as map. The keys are the different locales as strings,
     *                           the values are objects that look like that:
     *                           { time: timestamp, size: sizeInKB, metadata: 'metadata as string'}
     * @returns {boolean} True, if cache exceeds boundarys
     */
    // eslint-disable-next-line no-unused-vars
    exceedsBoundary(cacheEntries) {
    }

    /**
     * @abstract
     * @param {Map} cacheEntries The entries of the cache as map. The keys are the different locales,
     *                           the values are objects that look like that:
     *                           { time: timestamp, size: sizeInKB, metadata: 'metadata as string'}
     * @returns {string} The key of the item that should be cleared
     */
    // eslint-disable-next-line no-unused-vars
    invalidateItem(cacheEntries) {
    }
}

module.exports = AbstractCachingStrategy;
