'use strict';

const NotImplementedError = require('./errors/NotImplementedError');
const util = require('util');

/**
 * Describes a feature
 */
class Feature {

    /**
     * Constructor
     *
     * @param {string} message Short text info of feature
     * @param {string} [description=''] Details description of feature
     * @param {string} [supportedSince=''] Date of feature enablement
     */
    constructor(message, description = '', supportedSince = '') {

        /**
         * Short text info of feature (used for error information)
         * @type {string}
         */
        this.message = message;

        /**
         * Long text describing details about the feature
         * @type {string}
         */
        this.description = description;

        /**
         * Contains release version at which this feature has been enabled (e.g. >2.0.5)
         * @type {string}
         */
        this.supportedSince = supportedSince;
    }
}

/**
 * List of not (fully) supported features
 * Samples:
 * features.TypeCast --> TypeCasts as general features are not supported
 */
const features = {
    AttributeAbstract: new Feature('Entity and complex type attribute abstract is not supported'),
    AttributeHasStream: new Feature('The attribute HasStream is not supported'),
    AttributeOpenType: new Feature('Entity and complex type attribute opentype is not supported'),
    AttributeSRID: new Feature('The attribute SRID is not supported',
        'If a SRID property is used in CSDL oder EDM it must be set to undefined'),
    AttributeUnicode: new Feature('The attribute Unicode with a false value is not supported',
        'All properties must be set with a unicode character set'),

    NavigationInComplexType: new Feature('Complex type with navigation is not supported'),

    QueryParameterDeltatoken: new Feature('The system query parameter $deltatoken is not supported'),
    QueryParameterId: new Feature('The system query parameter $id is not supported'),
    QueryParameterSkipToken: new Feature('The system query parameter $skiptoken is only supported for '
        + 'entity- and reference-collections'),

    Ref: new Feature('Requests with $ref are not supported'),
    CrossJoin: new Feature('Requests with $crossjoin are not supported'),
    All: new Feature('Requests with $all are not supported'),
    Entity_id: new Feature('Requests with $entity are not supported'),
    Singleton: new Feature('Singletons are not supported'),
    TypeCast: new Feature("The typecast '%s' at position %d is not supported."),

    CountInExpand: new Feature('The usage of $count in $expand is not supported'),
    Levels: new Feature('The $expand option $levels is currently not supported'),

    Upsert: new Feature('Any kind of upsert scenario is currently not supported')
};

/**
 * Facade allowing the various lib parts to reject requests for explicitly not supported features
 */
class FeatureSupport {
    /**
     *
     * @param {Feature} feature
     */
    static failUnsupported(feature, ...parameters) {
        throw FeatureSupport.getUnsupported(feature, ...parameters);
    }

    /**
     *
     * @param {Feature} feature
     * @returns {Error} The unsupported error
     */
    static getUnsupported(feature, ...parameters) {
        return new NotImplementedError(util.format(feature.message, ...parameters));
    }
}

FeatureSupport.features = features;

module.exports = FeatureSupport;
