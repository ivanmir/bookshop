'use strict';

const HeaderInfo = require('../http/HeaderInfo');

const CHARSETS = {
    UTF_8: 'utf-8',
    ALL: '*'
};

class CharsetInfo extends HeaderInfo {

    /**
     * Used to store parts of the Accept-Charset Header
     * @param {string} charset
     */
    constructor(charset) {
        super('accept-charset');
        this._charset = charset;

        this._quality = 1;
    }

    /**
     * Set the quality.
     * @param {number} quality
     * @returns {CharsetInfo}
     * @package
     */
    setQuality(quality) {
        this._quality = quality;
        return this;
    }

    /**
     * Return the quality.
     * @returns {number} quality
     * @package
     */
    getQuality() {
        return this._quality;
    }

    /**
     * Set the charset
     * @param {string} charset
     * @returns {CharsetInfo}
     */
    setCharset(charset) {
        this._charset = charset;
        return this;
    }

    /**
     * Return the charset
     * @returns {string}
     * @package
     */
    getCharset() {
        return this._charset;
    }

    /**
     * Returns if all Charsets are supported
     * @returns {boolean}
     */
    isAll() {
        return (this._charset.toLowerCase() === CHARSETS.ALL);
    }

    /**
     * Returns if the charset is supported
     *
     * @returns {boolean}
     */
    isSupported() {
        return (this.isAll() || this._charset.toLowerCase() === CHARSETS.UTF_8);
    }
}

CharsetInfo.CHARSETS = CHARSETS;

module.exports = CharsetInfo;
